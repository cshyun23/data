//first option
#include <iostream>

using namespace std;

typedef unsigned short sfp;

int main() {

	float a;
	unsigned int* temp;
	unsigned short*temp3;
	cin >> a;
	sfp ans = 0;
	temp3 = (unsigned short*)&ans;
	temp = (unsigned int*)&a;

	ans = ans + (*temp >> 7);
	ans = ans >> 7;
		
	int b = *temp >> 23;
	b = b - 96;

	unsigned int* temp2;
	temp2 = (unsigned int*)&b;
	*temp2 = *temp2 << 9;
	ans = ans + temp2[0];

	if (a < 0) {
		ans = ans | (0x01 << 15);
	}

	for (int i = 15; i >= 0; i--) {
		if (*temp3 >> i & 0x01) { cout << "1"; }
		else { cout << "0"; }
	}

	return 0;
}

//Second option

#include <iostream>

using namespace std;

int sfp[16] = { 0, };

int main() {

	float a;
	unsigned long* temp;
	int ex;
	cin >> a;

	temp = (unsigned long*)&a;

	a > 0 ? sfp[0] = 0 : sfp[0] = 1;//sign부분

	for (int i = 22; i >= 7; i--) {//frac부분
		if (*temp >> i & 0x01) {
			sfp[29 - i] = 1;
		}
		else {
			sfp[29 - i] = 0;
		}

	}

	int b = *temp >> 23;
	b = b - 96;
	
	unsigned int* temp2;
	temp2 = (unsigned int*)&b;
	for (int i = 5; i >= 0; i--) {//exp부분
		if (*temp2 >> i & 0x01) {
			sfp[6 - i] = 1;
		}
		else {
			sfp[6 - i] = 0;
		}
	}

	for (int i = 0; i < 16; i++) {
		cout << sfp[i];

	}


}


